#!/usr/bin/env ruby
require_relative "../lib/mgemfile"
require 'thor'
require 'yaml'
module Mgemfile

  class Base < Thor
    desc "init","intialize gemfile"
    def init
      gem_file_init
    end

    desc "help","Describe every command"
    def help
      #gem_file_init.help
      puts data_help =  <<EOC
Usage: \nmgemfile <Command>\n\n
Description: mgemfile is a CLI Gemfile manager, add,remove gems from any environment and "bundle install" in a single CLI.\n\n
Commands: init,add, (to-do)remove\n\n
init: creating Gemfile in the current direcotry and sourced using rubygems\n\n
add gem-name(s): Adding specified gem(s) to the Gemfile and run <bundle install>\nExample:- mgemfile add rspec --development --test\n\n
remove gem-name(s): Removing specified gem(s) from gemFile and run <bundle install>\nExample:- mgemfile remove rspec --development --test\n\n
Note: You can specify multiple environments in the gem(s) installing proccess\nExample:- mgemfile add rspec capybara --development --test\n\n
More info: https://github.com/khaledmohammedfares/mgemfile
EOC
    end

    desc "add","Adding new gem"
    option :development
    option :test
    option :production
    def add *gems
      unless options.empty?
        gem_file_init.add_grouped_gems gems,options
      else
        gem_file_init.add_gems gems
      end
    end

    private
    def gem_file_init
      gemfile  = GemFileHandler.new
    end

  end

end
Mgemfile::Base.start ARGV
